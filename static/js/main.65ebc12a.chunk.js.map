{"version":3,"sources":["logo.svg","App.js","assets/img/banner3.png","components/Welcome.jsx","components/Pokemonstat.jsx","components/Pokemondata.jsx","components/Pokemonmoves.jsx","components/Pokemoncard.jsx","components/Pokemonevolution.jsx","components/Search.jsx","containers/Home.jsx","reportWebVitals.js","index.js"],"names":["App","Welcome","className","srcSet","banner","alt","React","Component","Pokemonstat","stats","labels","values","map","stat","push","name","base_stat","data","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","display","scales","yAxes","ticks","beginAtZero","Pokemondata","id","type","category","description","url","height","weight","weakness","reduce","weaknessAcc","currenType","src","parseFloat","toFixed","item","Pokemonmovesc","moves","useState","myPokemonMoves","useEffect","console","log","scope","move","pp","power","Pokemoncard","img","Pokemonevolution","evolutions","species","printEvolution","evolution","length","evolves_to","Search","props","pokemonName","setPokemonName","pokemonId","setPokemonId","pokemonType","setPokemonType","pokemonWeight","setPokemonWeight","pokemonHeight","setPokemonHeight","setPokemonSpecie","pokemonCategory","setPokemonCategory","pokemonImgUrl","setPokemonImgUrl","pokemonStats","setPokemonStats","pokemonMoves","setPokemonMoves","pokemonDescription","setPokemonDescription","pokemonEvolution","setPokemonEvolution","_getEvolutionPic","a","i","getPokemonImage","getPokemonEvolution","axios","get","resp","chain","evolvesTo","imageUrl","elem","frontDefault","sprites","other","front_default","pokeImage","handleSearch","toLowerCase","status","getPokemonSpecie","getStrengthWeakness","types","statusText","evolution_chain","descripcionElement","flavorTextEntriesFiltered","flavor_text_entries","filter","e","language","flavor_text","replace","categorie","genera","find","el","genus","promisesStrengthWeakness","forEach","typeUrl","promiseType","then","damageRelation","damage_relations","strength","double_damage_from","no_damage_from","Promise","all","result","placeholder","onChange","event","target","value","onKeyDown","key","_handlekeywordEvent","onClick","Pokemonmoves","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65ebc12a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/banner3.5d548ba8.png\";","import React from 'react';\r\nimport banner from '../assets/img/banner3.png'\r\nimport '../assets/styles/banner.css'\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        return <div className='row d-flex justify-content-center banner'>\r\n            <img srcSet={banner}  alt=\"\"/>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst Pokemonstat = ({stats}) => {\r\n    const labels= [];\r\n    const values = [];\r\n    stats.map(stat =>{\r\n        labels.push(stat.stat.name);\r\n        values.push(stat.base_stat);\r\n    })\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                data: values,\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        plugins:{\r\n            legend: {\r\n                display: false\r\n            },\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n    return (\r\n        <>\r\n            <div className='row d-flex justify-content-center'><h3>Base Stat</h3></div>\r\n            <Bar data={data} options={options} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pokemonstat;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport Pokemonstat from \"./Pokemonstat\";\r\nimport '../assets/styles/pokemondata.css'\r\nconst Pokemondata = ({name, id, type, category,description, url, stats, height, weight}) => {\r\n    let weakness = type.reduce((weaknessAcc, currenType)=>{\r\n        return [...weaknessAcc, ...currenType.weakness];\r\n    },[]);\r\n    return <>\r\n        <div className='col-lg-10 col-md-8 col-12 pokemon-data'>\r\n            <div className='row d-flex justify-content-center'>\r\n                <div className='pokemon-name'><h3>{name} Nro {id}</h3></div>\r\n            </div>\r\n            <div className='row d-flex'>\r\n                <div className='col-md-4 col-12'>\r\n                    <div className='pokemon-image'>\r\n                        <img className='img-thumbnail' src={url}/>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-8 col-12'>\r\n                    <div className='data d-flex flex-column'>\r\n                        <div className='p-2 d-flex justify-content-start'>\r\n                            <p>{description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <div className='row'>\r\n                                <div className='col-4 title'>Height</div>\r\n                                <div className='col-4 title'>Weight</div>\r\n                                <div className='col-4 title'>Category</div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-4'>{parseFloat(height).toFixed(2)}m</div>\r\n                                <div className='col-4'>{parseFloat(weight).toFixed(2)}kg</div>\r\n                                <div className='col-4'>{category}</div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12 title'>Type</div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                {type.map(item=>{\r\n                                    return <div className='col-4'>{item.name}</div>\r\n                                })}\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12 title'>Weakness</div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {weakness.map(item=>{\r\n                                    return <div className='col-4'>{item}</div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <Pokemonstat stats={stats}></Pokemonstat>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n}\r\n\r\nexport default Pokemondata;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nconst Pokemonmovesc = ({moves}) => {\r\n    const [myPokemonMoves, setMyPokemonMoves] = useState(moves?moves:[]);\r\n    useEffect(()=>{\r\n        console.log('moves component ',myPokemonMoves);\r\n    })\r\n    return <div>\r\n        <table className=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th scope=\"col\">name</th>\r\n                <th scope=\"col\">Power Point</th>\r\n                <th scope=\"col\">Power</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Category</th>\r\n                <th scope=\"col\">Description</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {myPokemonMoves?.map(move=>{\r\n                    //let move= m.move;\r\n                    //console.log(move);\r\n                    return <tr>\r\n                        <th>{move.name}</th>\r\n                        <th>{move.pp?move.pp:0}</th>\r\n                        <th>{move.power?move.power:0}</th>\r\n                        <th>{move.type?move.type.name:''}</th>\r\n                        <th>{move.category?move.category:''}</th>\r\n                        <th>{move.description?move.description:''}</th>\r\n                    </tr>\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n}\r\n\r\nexport default Pokemonmovesc;\r\n","import React from 'react';\r\nconst Pokemoncard= ({name, img}) => {\r\n\r\n    return <>\r\n        <h4 className='text-center'>{name}</h4>\r\n        <img src={img} className=\"img-fluid border border-dark rounded-circle mx-auto d-block\"></img>\r\n    </>\r\n}\r\n\r\nexport default Pokemoncard;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport '../assets/styles/Pokemonevolution.css';\r\nimport Pokemoncard from \"./Pokemoncard\";\r\nconst Pokemonevolution = ({evolutions}) => {\r\n\r\n    console.log('evolution component', evolutions);\r\n    function printEvolution(evolution){\r\n        if(evolution && evolution.length>0){\r\n            return <>\r\n                <div className='d-flex flex-column'>\r\n                {evolution.map(item=>{\r\n                        return <>\r\n                           <Pokemoncard name={item.species.name} img={item.species.img} ></Pokemoncard>\r\n                        </>\r\n                })}\r\n                </div>\r\n                {evolution.map(item =>{\r\n                    return printEvolution(item.evolves_to)\r\n                })}\r\n\r\n            </>\r\n\r\n        }\r\n    }\r\n    return <>\r\n        <div className='row pokemon-info container-evolution'>\r\n            <div className='col-12'>\r\n                <div className='row justify-content-center '>\r\n                    <div>\r\n                        <h2>Evolution</h2>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='d-flex flex-row justify-content-center'>\r\n                            <div className='d-flex flex-column evolution-container'>\r\n                                <Pokemoncard name={evolutions.species.name} img={evolutions.species.img}>\r\n\r\n                                </Pokemoncard>\r\n                            </div>\r\n                            {printEvolution(evolutions.evolves_to)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Pokemonevolution;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Pokemondata from \"./Pokemondata\";\r\nimport Pokemonmovesc from \"./Pokemonmoves\";\r\nimport PokemonEvolution from './Pokemonevolution';\r\nimport '../assets/styles/search.css'\r\n\r\nconst Search = (props) => {\r\n    const [pokemonName, setPokemonName] = useState('');\r\n    const [pokemonId, setPokemonId] = useState(null);\r\n    const [pokemonType, setPokemonType] = useState(null);\r\n    const [pokemonWeight, setPokemonWeight] = useState(null);\r\n    const [pokemonHeight, setPokemonHeight] = useState(null);\r\n    const [pokemonSpecie, setPokemonSpecie] = useState(null);\r\n    const [pokemonCategory, setPokemonCategory ] = useState(null);\r\n    const [pokemonImgUrl, setPokemonImgUrl] = useState(null);\r\n    const [pokemonStats, setPokemonStats] = useState(null);\r\n    const [pokemonMoves, setPokemonMoves] = useState(null);\r\n    const [pokemonDescription, setPokemonDescription] = useState(null);\r\n    const [ pokemonEvolution, setPokemonEvolution ] = useState(null);\r\n\r\n    useEffect(() => {\r\n    });\r\n    async function _getEvolutionPic(evolves_to){\r\n        if(evolves_to && evolves_to.length>0){\r\n                for(let i=0; i<evolves_to.length; i++){\r\n                    let species=evolves_to[i].species;\r\n                    species.img=await getPokemonImage(species.name);\r\n                    evolves_to[i].evolves_to = await _getEvolutionPic(evolves_to[i].evolves_to);\r\n                }\r\n        }\r\n        return evolves_to;\r\n    }\r\n    async function getPokemonEvolution(url){\r\n        if(url){\r\n            try{\r\n                let resp = await axios.get(url);\r\n                let chain = resp.data.chain;\r\n                let evolvesTo = chain.evolves_to;\r\n                let imageUrl = await getPokemonImage(chain.species.name);\r\n                chain.species.img =imageUrl;\r\n                for(let i = 0; i<evolvesTo.length; i++){\r\n                    let elem = evolvesTo[i];\r\n                    elem.species.img =  await getPokemonImage(elem.species.name);\r\n                    elem.evolves_to = await _getEvolutionPic(elem.evolves_to);\r\n                }\r\n                console.log('cadena evolucion', chain);\r\n                setPokemonEvolution(chain);\r\n            }catch (e) {\r\n                console.log(`error ->`, e);\r\n            }\r\n        }\r\n    }\r\n    async function getPokemonImage(name){\r\n        try{\r\n            let resp = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n            let data = resp.data;\r\n            let frontDefault = data.sprites.other['official-artwork'].front_default;\r\n            let pokeImage = frontDefault?frontDefault:data.sprites.front_default;\r\n            return pokeImage;\r\n        }catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    async function handleSearch(name){\r\n        try {\r\n            if(name){\r\n                setPokemonMoves(null);\r\n                setPokemonEvolution(null);\r\n                let resp = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name.toLowerCase()}`);\r\n                if (resp.status == 200) {\r\n                    let data = resp.data;\r\n                    console.log('data', data)\r\n                    await getPokemonSpecie(data.species.url);\r\n                    await getStrengthWeakness(data.types);\r\n                    setPokemonName(data.species.name)\r\n                    setPokemonId(data.id);\r\n                    setPokemonWeight(data.weight/10);\r\n                    setPokemonHeight(data.height*0.1);\r\n                    setPokemonId(data.id);\r\n                    let frontDefault = data.sprites.other['official-artwork'].front_default;\r\n                    let pokeImage = frontDefault?frontDefault:data.sprites.front_default;\r\n                    setPokemonImgUrl(pokeImage);\r\n                    setPokemonSpecie(data.species)\r\n                    setPokemonStats(data.stats);\r\n                    console.log('pokemonId', pokemonId);\r\n                    console.log('pokemonName', pokemonName);\r\n                    console.log('pokemonType', pokemonType);\r\n                    console.log('pokemonStats', pokemonStats);\r\n                    console.log('pokemonDescription', pokemonDescription);\r\n                    console.log('pokemonCategory', pokemonCategory);\r\n                }else{\r\n                    console.log('error', resp.statusText);\r\n                }\r\n            }else{\r\n                console.log('no pokemone Name')\r\n            }\r\n        }catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    async function getPokemonSpecie(url){\r\n        if(url){\r\n            let resp = await axios.get(url);\r\n            let data = await resp.data;\r\n            await getPokemonEvolution(data.evolution_chain.url);\r\n            let descripcionElement = '';\r\n            let flavorTextEntriesFiltered =data.flavor_text_entries.filter(e => e.language.name == 'en')\r\n            if(flavorTextEntriesFiltered){\r\n                descripcionElement=  flavorTextEntriesFiltered[0]\r\n            }else{\r\n                descripcionElement =data.flavor_text_entries[0];\r\n            }\r\n            console.log('descripcionElement', descripcionElement)\r\n            // let descripcionElement =data.flavor_text_entries[9];\r\n            setPokemonDescription(descripcionElement?descripcionElement.flavor_text.replace(\"\\f\",' ') :'');\r\n            let categorie = data.genera.find(el => el.language.name == 'en');\r\n            setPokemonCategory(categorie!=null?categorie.genus:'');\r\n        }\r\n    }\r\n    async function getStrengthWeakness(types){\r\n        if(types && types.length >0){\r\n            let promisesStrengthWeakness=[];\r\n            types.forEach( el=>{\r\n                let typeUrl = el.type.url;\r\n                let promiseType = axios.get(typeUrl).then((resp) =>{\r\n                    let data = resp.data;\r\n                    let damageRelation = data.damage_relations;\r\n                    let strength= [];\r\n                    let weakness= []\r\n                    if (damageRelation && damageRelation.double_damage_from && damageRelation.double_damage_from.length>0){\r\n                        weakness = damageRelation.double_damage_from.map(item=>item.name);\r\n                    }\r\n                    if (damageRelation && damageRelation.no_damage_from && damageRelation.no_damage_from.length>0){\r\n                        strength = damageRelation.no_damage_from.map(item=>item.name);\r\n                    }\r\n                    return {name:data.name,weakness, strength};\r\n                });\r\n                promisesStrengthWeakness.push(promiseType);\r\n            });\r\n            await Promise.all(promisesStrengthWeakness).then(result =>{\r\n                setPokemonType(result);\r\n                })\r\n        }else{\r\n\r\n        }\r\n    }\r\n    function _handlekeywordEvent(pokemonName){\r\n\r\n        console.log('pokemonName ', pokemonName)\r\n        handleSearch(pokemonName)\r\n    }\r\n        return <>\r\n                <div className='row d-flex justify-content-center search '>\r\n                    <div className='col-lg-10 col-md-8 col-12'>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"text\"\r\n                                   className=\"form-control\"\r\n                                   placeholder=\"name\"\r\n                                   onChange={event => setPokemonName(event.target.value)}\r\n                                   onKeyDown={e => e.key === 'Enter' && _handlekeywordEvent(e.target.value)}/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-primary\" type=\"button\"  onClick={e=>handleSearch(pokemonName)} >Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row d-flex justify-content-center pokemon-info'>\r\n                    {\r\n                        pokemonId!=null &&\r\n                        pokemonName!=null &&\r\n                        pokemonType!=null &&\r\n                        pokemonStats!=null &&\r\n                        pokemonDescription!=null &&\r\n                        pokemonCategory!=null && (\r\n                        <Pokemondata name={pokemonName}\r\n                                     id={pokemonId}\r\n                                     category = {pokemonCategory}\r\n                                     description = {pokemonDescription}\r\n                                     url={pokemonImgUrl}\r\n                                     type={pokemonType}\r\n                                     stats={pokemonStats}\r\n                                     weight={pokemonWeight}\r\n                                     height={pokemonHeight}\r\n                        >\r\n                        </Pokemondata>\r\n                    )}\r\n                </div>\r\n            { pokemonMoves!=null && ( <Pokemonmovesc moves={pokemonMoves}></Pokemonmovesc>  )}\r\n\r\n            { pokemonEvolution !=null && <PokemonEvolution evolutions={pokemonEvolution}></PokemonEvolution>}\r\n        </>\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Welcome from \"../components/Welcome\";\r\nimport Search from \"../components/Search\";\r\nconst Home = (props)=>{\r\n    return (<>\r\n        <Welcome name=\"Oscar\" />\r\n        <div className='container'>\r\n            <Search/>\r\n        </div>\r\n\r\n    </>)\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Home from \"./containers/Home\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <div className='container-fluid'>\n          <Home />\n      </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}