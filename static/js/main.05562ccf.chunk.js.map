{"version":3,"sources":["logo.svg","App.js","assets/img/banner3.png","components/Banner.jsx","components/Pokemonstat.jsx","components/Pokemondata.jsx","assets/libs/http.js","components/Pokemoncard.jsx","components/SearchResult.jsx","components/SearchBar.jsx","containers/Home.jsx","components/Pokemonevolution.jsx","containers/Pokemon.jsx","reportWebVitals.js","index.js"],"names":["App","Banner","className","srcSet","banner","alt","React","Component","Pokemonstat","stats","labels","values","map","stat","push","name","base_stat","data","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","display","scales","yAxes","ticks","beginAtZero","Pokemondata","id","type","category","description","url","height","weight","weakness","reduce","weaknessAcc","currenType","src","parseFloat","toFixed","item","axios","require","basicUrl","getPokemonList","limit","offset","get","searchPokemonByName","a","then","resp","results","pokemonList","filteredPokemonList","filter","pokemon","includes","pokemonListMapped","split","searchResult","position","length","getPokemoBaseInfo","baseInfo","is_default","getPokemonById","result","heigth","specieUrl","species","types","images","sprites","getStrengthWeakness","pokemonBaseInfo","promisesStrengthWeakness","forEach","el","typeUrl","promiseType","damageRelation","damage_relations","strength","double_damage_from","no_damage_from","Promise","all","typesInfo","getPokemonEvolution","pokemoBaseInfo","evolutionChainUrl","chain","evolvesTo","evolves_to","getPokemonImage","imageUrl","img","i","elem","getEvolutionPic","getPokemonByName","frontDefault","other","front_default","pokeImage","getPokemonInfo","basePokemonInfo","descripcionElement","englishTextEntrie","flavor_text_entries","e","language","categorie","genera","find","flavor_text","replace","genus","evolution_chain","catch","err","console","log","pokemonSpecie","pokemonStrengthWeakness","pokemonEvolutionChain","evolutionChain","Pokemoncard","to","pathname","SearchResult","element","SearchBar","props","useState","pokemonName","setPokemonName","setSearchResult","useEffect","handleSearch","placeholder","onChange","event","target","value","onKeyDown","key","onClick","Home","Pokemonevolution","evolutions","printEvolution","evolution","Pokemon","urlName","useParams","setName","document","title","pokemonInfo","setPokemonInfo","info","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","getElementById"],"mappings":"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","file":"static/js/main.05562ccf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/banner3.5d548ba8.png\";","import React from 'react';\r\nimport banner from '../assets/img/banner3.png'\r\nimport '../assets/styles/banner.css'\r\nclass Banner extends React.Component {\r\n    render() {\r\n        return <div className='row d-flex justify-content-center banner'>\r\n            <img srcSet={banner}  alt=\"\"/>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst Pokemonstat = ({stats}) => {\r\n    const labels= [];\r\n    const values = [];\r\n    stats.map(stat =>{\r\n        labels.push(stat.stat.name);\r\n        values.push(stat.base_stat);\r\n    })\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                data: values,\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        plugins:{\r\n            legend: {\r\n                display: false\r\n            },\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n    return (\r\n        <>\r\n            <div className='row d-flex justify-content-center'><h3>Base Stat</h3></div>\r\n            <Bar data={data} options={options} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pokemonstat;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport Pokemonstat from \"./Pokemonstat\";\r\nimport '../assets/styles/pokemondata.css'\r\nconst Pokemondata = ({name, id, type, category,description, url, stats, height, weight}) => {\r\n    let weakness = type.reduce((weaknessAcc, currenType)=>{\r\n        return [...weaknessAcc, ...currenType.weakness];\r\n    },[]);\r\n//    let weakness = [];\r\n    return <>\r\n        <div className='col-12 pokemon-data'>\r\n            <div className='row d-flex justify-content-center'>\r\n                <div className='pokemon-name'><h3>{name} Nro {id}</h3></div>\r\n            </div>\r\n            <div className='row d-flex justify-content-center'>\r\n                <div className='col-md-4 col-12'>\r\n                    <div className='pokemon-image'>\r\n                        <img className='img-thumbnail' src={url}/>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-8 col-12'>\r\n                    <div className='data d-flex flex-column'>\r\n                        <div className='p-2 d-flex justify-content-start'>\r\n                            <p>{description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <div className='row'>\r\n                                <div className='col-4 title'>Height</div>\r\n                                <div className='col-4 title'>Weight</div>\r\n                                <div className='col-4 title'>Category</div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-4'>{parseFloat(height).toFixed(2)}m</div>\r\n                                <div className='col-4'>{parseFloat(weight).toFixed(2)}kg</div>\r\n                                <div className='col-4'>{category}</div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12 title'>Type</div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                {type.map(item=>{\r\n                                    return <div className='col-4'>{item.name}</div>\r\n                                })}\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12 title'>Weakness</div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {weakness.map(item=>{\r\n                                    return <div className='col-4'>{item}</div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <Pokemonstat stats={stats}></Pokemonstat>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n}\r\n\r\nexport default Pokemondata;\r\n","import { compose } from 'redux'\r\nconst  axios = require('axios');\r\n\r\n\r\nconst basicUrl = 'https://pokeapi.co/api/v2/';\r\n\r\nconst getPokemonList = (limit = 60, offset = 0 ) => axios.get(`${basicUrl}pokemon?limit=${limit}&offset=${offset}`);\r\nconst getPokemonIdFromUrl = url => url.split('/')[6]\r\n\r\nconst searchPokemonByName =  async name => {\r\n    let pokemonList = await getPokemonList(1118, 0).then(resp => resp.data.results);\r\n    let filteredPokemonList = pokemonList.filter(pokemon => (pokemon.name.includes(name)) );\r\n    let pokemonListMapped = filteredPokemonList.map(pokemon =>( {name:pokemon.name, id : getPokemonIdFromUrl(pokemon.url)}));\r\n    let searchResult = [];\r\n    for(let position = 0; position < pokemonListMapped.length; position++){\r\n        let pokemon = pokemonListMapped[position];\r\n        let baseInfo = await getPokemoBaseInfo(pokemon.id);\r\n        if(baseInfo.is_default){\r\n            searchResult.push(baseInfo);\r\n        }\r\n    }\r\n    return searchResult;\r\n}\r\n\r\nconst getPokemoBaseInfo = async id => {\r\n    let result = await getPokemonById(id);\r\n    return {\r\n        name: result.name,\r\n        id: result.id,\r\n        weight: result.weight/10,\r\n        heigth: result.height*0.1,\r\n        specieUrl: result.species.url,\r\n        types: result.types,\r\n        images: result.sprites,\r\n        stats: result.stats,\r\n        is_default: result.is_default\r\n    }\r\n}\r\nconst getPokemonSpecie =  pokemonBaseInfo => axios.get(pokemonBaseInfo.specieUrl).then(resp =>{\r\n    let data = resp.data;\r\n    let descripcionElement = '';\r\n    let englishTextEntrie =data.flavor_text_entries.filter(e => e.language.name == 'en');\r\n    descripcionElement= englishTextEntrie?englishTextEntrie[0]:data.flavor_text_entries[0];\r\n    //console.log('description', descripcionElement)\r\n    let categorie = data.genera.find(el => el.language.name == 'en');\r\n    return {\r\n        description:descripcionElement.flavor_text.replace(\"\\f\",' '),\r\n        categorie: categorie?categorie.genus:'',\r\n        evolutionChainUrl: data.evolution_chain.url\r\n    }\r\n}).catch(err => console.log(err))\r\n\r\nconst getStrengthWeakness = async pokemonBaseInfo =>{\r\n    let types = pokemonBaseInfo.types;\r\n    if (types  && types.length > 0){\r\n        let promisesStrengthWeakness=[];\r\n        types.forEach( el=>{\r\n            let typeUrl = el.type.url;\r\n            let promiseType = axios.get(typeUrl).then((resp) =>{\r\n                let data = resp.data;\r\n                let damageRelation = data.damage_relations;\r\n                let strength= [];\r\n                let weakness= []\r\n                if (damageRelation && damageRelation.double_damage_from && damageRelation.double_damage_from.length>0){\r\n                    weakness = damageRelation.double_damage_from.map(item=>item.name);\r\n                }\r\n                if (damageRelation && damageRelation.no_damage_from && damageRelation.no_damage_from.length>0){\r\n                    strength = damageRelation.no_damage_from.map(item=>item.name);\r\n                }\r\n                return {name:data.name,weakness, strength};\r\n            });\r\n            promisesStrengthWeakness.push(promiseType);\r\n        });\r\n        return await Promise.all(promisesStrengthWeakness).then(result =>{\r\n            return { typesInfo: result}\r\n        })\r\n    }\r\n}\r\n\r\nconst getPokemonEvolution = async pokemoBaseInfo =>{\r\n    let data = await axios.get(pokemoBaseInfo.evolutionChainUrl).then(resp => resp.data);\r\n    let chain = data.chain;\r\n    let evolvesTo = chain.evolves_to;\r\n    let imageUrl = await getPokemonImage(chain.species.name);\r\n    chain.species.img =imageUrl;\r\n    for(let i = 0; i<evolvesTo.length; i++){\r\n        let elem = evolvesTo[i];\r\n        elem.species.img =  await getPokemonImage(elem.species.name);\r\n        elem.evolves_to = await getEvolutionPic(elem.evolves_to);\r\n    }\r\n    return chain;\r\n}\r\n\r\nconst getPokemonImage = async name =>{\r\n    let pokemon = await getPokemonByName(name);\r\n    let frontDefault = pokemon.sprites.other['official-artwork'].front_default;\r\n    let pokeImage = frontDefault?frontDefault:pokemon.sprites.front_default;\r\n    return pokeImage\r\n\r\n}\r\n// it is mutating the object\r\nconst getEvolutionPic = async evolves_to =>{\r\n    if(evolves_to && evolves_to.length>0){\r\n        for(let i=0; i<evolves_to.length; i++){\r\n            let species=evolves_to[i].species;\r\n            species.img=await getPokemonImage(species.name);\r\n            evolves_to[i].evolves_to = await getEvolutionPic(evolves_to[i].evolves_to);\r\n        }\r\n    }\r\n    return evolves_to;\r\n}\r\nconst getPokemonById = id => axios.get(`${basicUrl}pokemon/${id}`).then(resp => resp.data);\r\nconst getPokemonByName = name => axios.get(`${basicUrl}pokemon/${name}`).then(resp => resp.data);\r\n\r\nconst getPokemonInfo = async id =>{\r\n    let basePokemonInfo = await getPokemoBaseInfo(id);\r\n    let pokemonSpecie = await getPokemonSpecie(basePokemonInfo);\r\n    let pokemonStrengthWeakness = await getStrengthWeakness(basePokemonInfo);\r\n    let pokemonEvolutionChain = await  getPokemonEvolution(pokemonSpecie);\r\n    return {...basePokemonInfo, ...pokemonSpecie, ...pokemonStrengthWeakness, evolutionChain:{...pokemonEvolutionChain}}\r\n}\r\nexport {\r\n    getPokemonList,\r\n    searchPokemonByName,\r\n    getPokemonInfo\r\n}\r\n","import React from 'react';\r\nimport '../assets/styles/pokemoncard.css'\r\nimport {Link} from \"react-router-dom\";\r\nconst Pokemoncard= ({name, img, id}) => {\r\n\r\n    return <div className='col-md-3 col-12 pokemon-card'>\r\n\r\n        <h4 className='text-center pokemon-name'>\r\n            <Link to={{\r\n                pathname:`/pokemon/${name}`\r\n            }}>{name}</Link>\r\n        </h4>\r\n        <img src={img} className=\"img-fluid border border-dark rounded-circle mx-auto d-block\"></img>\r\n        {id && (\r\n            <p className='text-center'>Nro {id}</p>\r\n        )}\r\n    </div>\r\n}\r\n\r\nexport default Pokemoncard;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport Pokemoncard from \"./Pokemoncard\";\r\nimport '../assets/styles/searchresult.css'\r\n\r\nconst SearchResult = ({searchResult}) => {\r\n\r\n    //justify-content-center\r\n    const getPokemonImage = pokemon =>{\r\n        let frontDefault = pokemon.images.other['official-artwork'].front_default;\r\n        let pokeImage = frontDefault?frontDefault:pokemon.images.front_default;\r\n        return pokeImage\r\n    }\r\n    return <div className='row d-flex search-result'>\r\n\r\n            {   searchResult &&\r\n                searchResult.length > 0 &&\r\n                searchResult.map(element=> <Pokemoncard name = {element.name}\r\n                                                        img={getPokemonImage(element)}\r\n                                                        id={element.id}>\r\n\r\n                                            </Pokemoncard>)\r\n            }\r\n\r\n    </div>\r\n}\r\n\r\nexport default SearchResult;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Pokemondata from \"./Pokemondata\";\r\n\r\nimport '../assets/styles/search.css'\r\nimport   {getPokemonList, searchPokemonByName, getPokemonInfo} from  '../assets/libs/http';\r\nimport SearchResult from \"./SearchResult\";\r\n\r\nconst SearchBar = (props) => {\r\n     const [pokemonName, setPokemonName] = useState('');\r\n\r\n    const [searchResult, setSearchResult] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n    });\r\n    const handleSearch = async (name) => {\r\n        try {\r\n            if(name){\r\n                let resp = await searchPokemonByName(name);\r\n                setSearchResult(resp);\r\n            }else{\r\n                console.log('no pokemone Name')\r\n            }\r\n        }catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    return <>\r\n            <div className='row d-flex justify-content-center search '>\r\n                <div className='col-lg-10 col-md-8 col-12'>\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"name\"\r\n                               onChange={event => setPokemonName(event.target.value)}\r\n                               onKeyDown={e => e.key === 'Enter' && handleSearch(e.target.value)}/>\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-primary\" type=\"button\"  onClick={e=>handleSearch(pokemonName)} >Search</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='col-12  search-result-container'>\r\n                {searchResult && (\r\n                    <SearchResult searchResult={searchResult}></SearchResult>\r\n                )}\r\n            </div>\r\n    </>\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport Banner from \"../components/Banner\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nconst Home = (props)=>{\r\n    return (<>\r\n\r\n        <div className='container'>\r\n            <SearchBar/>\r\n        </div>\r\n\r\n    </>)\r\n}\r\n\r\nexport default Home;\r\n","import React,  { useState, useEffect } from 'react';\r\nimport '../assets/styles/Pokemonevolution.css';\r\nimport Pokemoncard from \"./Pokemoncard\";\r\nconst Pokemonevolution = ({evolutions}) => {\r\n    function printEvolution(evolution){\r\n        if(evolution && evolution.length>0){\r\n            return <>\r\n                {evolution.map(item=>{\r\n                        return <>\r\n                           <Pokemoncard name={item.species.name} img={item.species.img} ></Pokemoncard>\r\n                        </>\r\n                })}\r\n                {evolution.map(item =>{\r\n                    return printEvolution(item.evolves_to)\r\n                })}\r\n\r\n            </>\r\n\r\n        }\r\n    }\r\n    console.log('evolution', evolutions);\r\n    return <>\r\n                <div className='col-12 text-center title'>\r\n                    <h2>Evolution</h2>\r\n                </div>\r\n                <Pokemoncard name={evolutions.species.name} img={evolutions.species.img}>\r\n                </Pokemoncard>\r\n                {printEvolution(evolutions.evolves_to)}\r\n            </>\r\n}\r\n\r\nexport default Pokemonevolution;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport '../assets/styles/pokemon.css';\r\nimport   {getPokemonList, searchPokemonByName, getPokemonInfo} from  '../assets/libs/http';\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Pokemondata from \"../components/Pokemondata\";\r\nimport PokemonEvolution from \"../components/Pokemonevolution\";\r\n\r\nconst Pokemon = ( props ) => {\r\n    let urlName = useParams().name;\r\n\r\n    const [name, setName] = useState('');\r\n    useEffect( () => {\r\n            setName(urlName);\r\n            document.title = `Pokedex | ${name}`;\r\n    },[urlName]);\r\n\r\n    const [pokemonInfo, setPokemonInfo] = useState(null);\r\n    useEffect(async ()=>{\r\n        try{\r\n            let info = await getPokemonInfo(urlName);\r\n            setPokemonInfo(info);\r\n        }catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, [urlName]);\r\n\r\n    if (name === '' ){\r\n        return 'Loading';\r\n        //d-flex justify-content-center\r\n    }else{\r\n        return <div className='container pokemon-container'>\r\n            <div className='row d-flex justify-content-center pokemon-info'>\r\n                {   pokemonInfo &&\r\n                    pokemonInfo.id!=null &&\r\n                    pokemonInfo.name!=null &&\r\n                    pokemonInfo.types!=null &&\r\n                    pokemonInfo.stats!=null &&\r\n                    pokemonInfo.description!=null &&\r\n                    pokemonInfo.typesInfo!=null && (\r\n                        <Pokemondata name={pokemonInfo.name}\r\n                                     id={pokemonInfo.id}\r\n                                     category = {pokemonInfo.categorie}\r\n                                     description = {pokemonInfo.description}\r\n                                     url={pokemonInfo.images.other['official-artwork'].front_default}\r\n                                     type={pokemonInfo.typesInfo}\r\n                                     stats={pokemonInfo.stats}\r\n                                     weight={pokemonInfo.weight}\r\n                                     height={pokemonInfo.heigth}\r\n                        >\r\n                        </Pokemondata>\r\n                    )}\r\n\r\n            </div>\r\n            <div className='row d-flex justify-content-center pokemon-evolution-container'>\r\n                { pokemonInfo && pokemonInfo.evolutionChain !=null && <PokemonEvolution evolutions={pokemonInfo.evolutionChain}></PokemonEvolution>}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Pokemon;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Home from \"./containers/Home\";\r\nimport Pokemon from './containers/Pokemon';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Banner from \"./components/Banner\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <div className='container-fluid'>\r\n            <Banner name=\"Oscar\" />\r\n            <Switch>\r\n                <Route path='/pokedex'>\r\n                    <Home />\r\n                </Route>\r\n                <Route path='/pokemon/:name'>\r\n                    <Pokemon />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </div>\r\n    </Router>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}